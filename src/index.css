@keyframes opacity-0-1 {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes outline-color-0-1-2 {
  0% { outline-color: var(--c-jump-0); }
  50% { outline-color: var(--c-jump-1); }
  100% { outline-color: var(--c-jump-2); }
}

@keyframes pointer-events-auto-none {
  0% { pointer-events: auto; }
  100% { pointer-events: none; }
}

@keyframes position-relative-absolute {
  0% { position: relative; }
  100% { position: absolute; }
}

@font-face {
  /** @see [Google Material Symbols guide](https://developers.google.com/fonts/docs/material_symbols#use_in_web) */
  font-family: 'Material Symbols Rounded';
  font-style: normal;
  font-weight: 400;
  src: url(../fonts/material-symbols/MaterialSymbolsRounded-FILL-GRAD-opsz-wght.woff2) format('woff2'),
    url(../fonts/material-symbols/MaterialSymbolsRounded-FILL-GRAD-opsz-wght.ttf) format('truetype');

  /**
   * @todo Fix the flash of icon fallback text.
   * @see [SO to watch for the font load](https://stackoverflow.com/a/48121477)
   * @see [SO for `font-display`](https://stackoverflow.com/a/53301684)
   */
  font-display: block;
}

:root {
  --c-hi-0: #fffc;
  --c-hi-1: #fff;
  --c-lo-0: #333c;
  --c-lo-1: #000;
  --c-base-root: #161616;
  --c-base: var(--c-base-root);
  --c-accent: #fff1;
  --c-text: #fffc;
  --c-code: var(--c-hi-0);
  --c-action-0: var(--c-hi-1);
  --c-action-1: #0000;
  --c-active: #2d9cdb;
  --c-error: #f43;
  --c-warn: #f92;
  --c-good-0: #fff;
  --c-good-1: #1acc6c;
  --c-interact: #2d9cdb15;
  --c-disable: #999;
  --c-nth: #0000;
  --c-jump-0: #0000;
  --c-jump-1: var(--c-active);
  --c-jump-2: #2d9cdb88;
  --s-font-m: 1rem;
  --s-font-s: 0.6rem;
  --s-l0-x: 2rem;
  --s-l0-y: 2rem;
  --s-l0-r: 2rem;
  --s-m0-x: 2rem;
  --s-m0-y: 1rem;
  --s-m0-r: 1rem;
  --s-m1-x: 1.1rem;
  --s-m1-y: 0.5rem;
  --s-m1-r: 0.7rem;
  --s-s0-x: 5px;
  --s-s0-y: 1px;
  --s-s0-r: 2px;
  --s-s1-x: 8px;
  --s-s1-y: 6px;
  --s-s1-r: 3px;
  --s-s2-x: 2px;
  --s-s2-y: 1px;
  --s-s2-r: 2px;
  --s-nav-r: 2.2rem;
  --s-line-x: 30rem;
  --s-icon-m: 3rem;
  --s-icon-s: 1.5rem;
  --s-input-x: 0.7rem;
  --s-input-y: 0.7rem;
  --s-input-r: 1.8rem;
  --s-jump-y: 9rem;
  --s-items-gap: 0.5rem 1.5rem;
  --z-jump: 0;
  --z-figure-flip: 1;
  --z-nav: 9;
  --font-w-0: 200;
  --font-w-1: 300;
  --font-w-2: 500;
  --fit: contain;
}

*,
*:before,
*:after { box-sizing: inherit; }

html {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  font-family: Inter, sans-serif;
  font-weight: var(--font-w-1);
  overflow: hidden auto;
  scroll-behavior: smooth;
  background: var(--c-base);
}

html,
nav {
  color: var(--c-text);
  font-size: var(--s-font-m);
}

body {
  min-height: 100%;
  margin: 0;
  line-height: 1.6;
  animation: 900ms ease-out 700ms 1 backwards opacity-0-1;
  will-change: opacity;
}

main {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: flex-start;
}

nav,
form,
fieldset {
  align-self: stretch;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  position: relative;
}

nav {
  --c-text: #000c;
  --c-hi-0: var(--c-lo-1);
  --c-base: var(--c-hi-1);
  --c-action-0: var(--c-hi-0);
  --c-action-1: var(--c-base);
  --s-font-m: 1.1rem;
  position: sticky;
  inset: var(--s-s1-r) 0;
  margin: var(--s-l0-y) auto;
  padding: var(--s-m1-r);
  gap: var(--s-items-gap);
  z-index: var(--z-nav);
  font-weight: var(--font-w-2);
  border-radius: var(--s-nav-r);
  background: var(--c-base-root);
  box-shadow: 0 0 var(--s-s1-r) 0 var(--c-base-root);
  /* backdrop-filter: invert(1) blur(3px) saturate(0.5); */

  /* @media (min-width: 40rem) {} */
}

form,
fieldset {
  gap: var(--s-s2-r);
  padding: var(--s-s2-y) var(--s-s2-x);
  border-radius: var(--s-input-r);
}

form {
  border: 1px solid currentColor;
  background: var(--c-base);

  input,
  button,
  .button,
  label,
  fieldset {
    &:not(:hover, :focus, :active) { border-color: #0000; }
  }

  .optional {
    flex-flow: column nowrap;
    align-items: flex-start;
    position: absolute;
    inset: 100% auto auto 0;
    background: var(--c-base-root);
    border-color: #0000;
    color: var(--c-disable);
    font-style: italic;
    transition: opacity 900ms ease-out;
    will-change: opacity;
  }

  &:not(:focus, :focus-within) .optional:not(:focus, :focus-within, :active) {
    opacity: 0;
    transition: opacity 300ms ease-in;
    animation: pointer-events-auto-none 0ms 100ms both;
  }

  &:invalid {
    [type="submit"] {
      color: var(--c-disable);

      &:invalid { color: var(--c-warn); }
    }

    :not(:placeholder-shown):required:invalid {
      color: var(--c-error);
      border-color: var(--c-error);

      & ~ [type="submit"] { cursor: not-allowed; }
    }
  }
}

fieldset { flex: 0 1 auto; }

header,
article {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin: 0;
}

header {
  flex-flow: row-reverse wrap;
  /* min-height: 85vh;
  min-height: 85dvh; */
  /* padding: var(--s-s1-r); */
  /* background: var(--c-accent); */
}

article {
  flex-flow: row wrap;
  border-top: 1px solid var(--c-accent);

  &:nth-of-type(odd) { background: var(--c-nth); }

  & > section { align-self: flex-start; }
}

section,
figure { flex: 0 1 auto; }

.bleed-inset,
section {
  padding: var(--s-l0-y) var(--s-l0-x);

  & > section { padding: 0; }
}

figure {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;
  margin: 0;
  cursor: zoom-in;
  /* background: var(--c-base); */

  &::after {
    content: 'âœ–';
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    position: absolute;
    inset: 0 0 auto auto;
    font-size: 1rem;
    width: var(--s-icon-s);
    height: var(--s-icon-s);
    /* border: 1px solid currentColor;
    border-radius: var(--s-icon-s); */
    z-index: var(--z-figure-flip);
    color: var(--c-hi-1);
    text-shadow: 0 0 2px var(--c-lo-1);
    opacity: 0;
    transform: rotate(45deg);
    transition: transform 500ms cubic-bezier(0.55, -0.25, 0.45, 2) 400ms,
      opacity 900ms ease-in 400ms;
    will-change: transform, opacity;
  }

  &:hover,
  &:focus,
  &:active {
    &::after {
      opacity: 1;
      transform: rotate(135deg);
      transition: transform 500ms cubic-bezier(0.55, -0.25, 0.45, 2) 400ms,
        opacity 300ms ease-out 400ms;
    }
  }

  &:fullscreen {
    cursor: zoom-out;
    padding: var(--s-l0-y) var(--s-l0-x);

    &::after {
      margin: var(--s-s1-r);
      transform: none;
    }
  }
}

figcaption {
  position: absolute;
  bottom: 0;
  max-height: 2.7em;
  padding: var(--s-s1-y) var(--s-s1-x);
  margin: var(--s-s1-r);
  overflow: auto;
  border-radius: var(--s-s1-r);
  background: var(--c-lo-0);
  text-align: center;
  cursor: auto;
  backdrop-filter: invert(1) blur(3px) saturate(0.5);
  transition: transform 300ms ease-out,
    opacity 300ms ease-out,
    backdrop-filter 300ms ease-out;
  will-change: transform, opacity, backdrop-filter;

  figure:is(:hover, :focus, :active):not(:fullscreen) & {
    &:not(:hover, :focus, :active) {
      transform: translateY(100%) translateY(calc(-1*var(--s-s1-y)));
      opacity: 0.3;
      backdrop-filter: none;
      transition: transform 900ms ease-in,
        opacity 900ms ease-in,
        backdrop-filter 900ms ease-in;
    }
  }
}

img,
video,
canvas {
  flex: 1 1 auto;
  max-width: 100%;
  max-height: 100%;
  object-fit: var(--fit);
}

code {
  display: inline-block;
  font-family: monospace, sans-serif;
  font-size: 0.9em;
  font-weight: var(--font-w-0);
  border-radius: var(--s-s1-r);
  padding: var(--s-s0-y) var(--s-s0-x);
  background: var(--c-lo-0);
  color: var(--c-code);
}

a,
input,
button,
.button,
label,
fieldset {
  &:hover,
  &:focus,
  &:active {
    color: var(--c-active);
    outline-color: currentColor;
  }

  &.icon { border-radius: var(--s-icon-m); }

  &.icon-in { padding: 0 0 0 var(--s-input-x); }

  em,
  strong,
  code { color: inherit; }
}

a {
  position: relative;
  z-index: 0;
  padding: var(--s-s0-r) 0;
  /* font-weight: var(--font-w-2); */
  cursor: pointer;
  text-decoration: none;
  border-radius: var(--s-s0-r);
  color: var(--c-action-0);
  background-image: linear-gradient(to top,
    currentColor var(--s-s0-r), #0000 var(--s-s0-r));
  background-repeat: repeat no-repeat;
  background-position-y: 0;
  transition: color 900ms ease-out,
    border-color 900ms ease-out,
    outline-color 900ms ease-out,
    background-position-y 900ms ease-out;
  will-change: color, border-color, outline-color, background-position-y;

  &:hover,
  &:focus,
  &:active,
  &[href^="#"] {
    background-position-y: calc(0.7*var(--s-s0-r));
    transition: color 300ms ease-in,
      border-color 300ms ease-in,
      outline-color 300ms ease-in,
      background-position-y 300ms ease-in;
  }

  &.icon,
  &.link-plain { background-image: none; }

  &[target="_blank"] { cursor: alias; }

  &.button { display: inline-block; }
}

input,
button,
.button,
label,
fieldset,
.placeholder {
  font-size: var(--s-font-m);
  line-height: 1.5;
  border-radius: var(--s-input-r);
  vertical-align: middle;
  cursor: pointer;
  text-decoration: none;
  background: var(--c-action-1);
  color: inherit;
  transition: color 900ms ease-out,
    border-color 900ms ease-out,
    outline-color 900ms ease-out;
  will-change: color, border-color, outline-color;
}

input,
button,
.button,
label,
fieldset {
  border: 1px solid currentColor;

  &:hover,
  &:focus,
  &:active {
    transition: color 300ms ease-in,
      border-color 300ms ease-in,
      outline-color 300ms ease-in;
  }
}

input,
button,
.button,
.placeholder { padding: var(--s-input-y) var(--s-input-x); }

label {
  position: relative;
  display: inline-flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: center;

  input {
    position: absolute;
    border-width: 0;
    max-width: 100%;

    &:placeholder-shown:not(:focus, :active),
    &:not(:placeholder-shown) ~ .placeholder,
    &:is(:focus, :active) ~ .placeholder {
      pointer-events: none;
      opacity: 0;
      outline: none;
      z-index: -1;
    }
  }
}

input {
  &[type="text"],
  &[type="email"] { background: var(--c-interact); }
}

.icon {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: var(--s-icon-m);
  height: var(--s-icon-m);
  vertical-align: middle;
  /** @see [Google Material Symbols guide](https://developers.google.com/fonts/docs/material_symbols#use_in_web) */
  font-family: 'Material Symbols Rounded';
  font-weight: normal;
  font-style: normal;
  font-size: 1.5rem;
  /* display: inline-block; */
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;

  &[type="submit"] {
    position: relative;
    overflow: hidden;

    &[disabled] { cursor: wait; }

    &::before,
    &::after {
      display: inherit;
      flex-flow: inherit;
      justify-content: inherit;
      align-items: inherit;
      position: absolute;
      inset: 0;
      z-index: 1;
      pointer-events: none;
      color: #0000;
      opacity: 0;
      transition: color 700ms ease-out,
        opacity 700ms ease-out 500ms;
      will-change: color, opacity;
    }

    &::before {
      --c-show: var(--c-good-0);
      content: 'schedule_send';
      background: var(--c-warn);
    }

    &::after {
      --c-show: var(--c-good-0);
      content: 'done_outline';
      background: var(--c-good-1);
    }

    &[disabled]::before,
    .success &::after,
    &.success::after {
      color: var(--c-show);
      opacity: 1;
      transition: none;
      z-index: 2;
    }
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--c-hi-1);
  margin: var(--s-m0-y) var(--s-m0-x);
  max-width: var(--s-line-x);
}

h1 {
  font-size: 2.8em;
  font-weight: 700;
}

h2 {
  font-size: 1.6em;
  font-weight: 700;
}

h3 {
  font-size: 1.3em;
  font-weight: 700;
}

h4,
h5,
h6 { font-size: 1.1em; }

p,
ul,
ol,
details {
  margin: 0 var(--s-m0-x) var(--s-m0-y);
  max-width: var(--s-line-x);
}

ul {
  padding-left: var(--s-m1-x);
  list-style-type: "~ ";
}

ol { padding-left: var(--s-m1-x); }

li { margin: var(--s-m1-y) 0; }

details {
  /** @todo [Animate](https://css-tricks.com/how-to-animate-the-details-element-using-waapi/) */
  display: inline-flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  scroll-margin-top: var(--s-jump-y);
  border-radius: var(--s-input-r);
  border: 1px solid currentColor;
  transition: color 900ms ease-out,
    border-color 900ms ease-out,
    outline-color 900ms ease-out;
  will-change: color, border-color, outline-color;

  &:hover,
  &:focus,
  &:active {
    border-color: var(--c-active);
    outline-color: currentColor;
    transition: color 300ms ease-in,
      border-color 300ms ease-in,
      outline-color 300ms ease-in;
  }

  & > p,
  & > ul,
  & > ol {
    margin-left: var(--s-input-x);
    margin-right: var(--s-input-x);
  }
}

summary {
  line-height: 1.5;
  font-size: var(--s-font-m);
  padding: var(--s-input-y) var(--s-input-x);
  background: var(--c-action-1);
  vertical-align: middle;
  cursor: pointer;
  transition: color 900ms ease-out;
  will-change: color;

  &.icon-in { padding: 0 0 0 var(--s-input-x); }

  details:hover > &,
  details:focus > &,
  details:active > & {
    color: var(--c-active);
    transition: color 300ms ease-in;
  }

  &::before {
    content: '';
    padding-left: 0.4rem;
  }
}

em,
strong { color: var(--c-hi-1); }

strong { font-weight: 900; }

.load {
  background-size: var(--fit);
  background-repeat: no-repeat;

  &.loaded { background-image: none !important; }

  &:not(.loaded) { filter: blur(2px); }
}

.jump {
  scroll-margin-top: var(--s-jump-y);
  border-radius: var(--s-s1-r);
  outline-offset: calc(-1*var(--s-s1-r));
  outline: var(--s-s1-r) solid #0000;
  transition: outline-color 900ms ease-out;
  will-change: outline-color;

  &:target {
    outline-color: var(--c-jump-2);
    animation: 2000ms ease-in-out 1 outline-color-0-1-2 backwards;
  }
}

.nav-cta {
  --s-input-x: 0.8rem;
  --s-input-y: 0.8rem;
}

.intro-main { order: 1; }

.peel-art {
  --fit: cover;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  touch-action: none;
  background: #e6e6e6;
  /* cursor: move; */
}

.peel-art-main,
.peel-art-layer { pointer-events: none; }

.peel-art-main {
  max-height: 60vmin;
  max-width: 60vmin;

  figure:fullscreen & {
    max-height: 90vmin;
    max-width: 90vmin;
  }
}

.peel-art-layer {
  position: absolute;
  inset: 0;
  margin: auto;
  width: 100%;
  height: 100%;
  clip-path: polygon(-140% 0%, -100% 0%, -200% 100%, -240% 100%);
  transition: clip-path 900ms ease-in;
  will-change: clip-path;

  &:nth-child(3) {
    clip-path: polygon(-220% 0%, -180% 0%, -280% 100%, -320% 100%);

    .peel-far & {
      clip-path: polygon(100% 0%, 130% 0%, 130% 100%, 100% 100%);
    }
  }

  &:nth-child(4) {
    clip-path: polygon(-210% 0%, -170% 0%, -270% 100%, -310% 100%);

    .peel-far & {
      clip-path: polygon(130% 0%, 160% 0%, 160% 100%, 130% 100%);
    }
  }

  &:nth-child(5) {
    clip-path: polygon(-200% 0%, -160% 0%, -260% 100%, -300% 100%);

    .peel-far & {
      clip-path: polygon(160% 0%, 190% 0%, 190% 100%, 160% 100%);
    }
  }

  &:nth-child(6) {
    clip-path: polygon(-190% 0%, -150% 0%, -250% 100%, -290% 100%);

    .peel-far & {
      clip-path: polygon(190% 0%, 220% 0%, 220% 100%, 190% 100%);
    }
  }

  &:nth-child(7) {
    clip-path: polygon(-180% 0%, -140% 0%, -240% 100%, -280% 100%);

    .peel-far & {
      clip-path: polygon(220% 0%, 250% 0%, 250% 100%, 220% 100%);
    }
  }

  &:nth-child(8) {
    clip-path: polygon(-170% 0%, -130% 0%, -230% 100%, -270% 100%);

    .peel-far & {
      clip-path: polygon(250% 0%, 280% 0%, 280% 100%, 250% 100%);
    }
  }

  &:nth-child(9) {
    clip-path: polygon(-160% 0%, -120% 0%, -220% 100%, -260% 100%);

    .peel-far & {
      clip-path: polygon(280% 0%, 310% 0%, 310% 100%, 280% 100%);
    }
  }

  &:nth-child(10) {
    clip-path: polygon(-150% 0%, -110% 0%, -210% 100%, -250% 100%);

    .peel-far & {
      clip-path: polygon(310% 0%, 340% 0%, 340% 100%, 310% 100%);
    }
  }

  &:nth-child(11) {
    clip-path: polygon(-140% 0%, -100% 0%, -200% 100%, -240% 100%);

    .peel-far & {
      clip-path: polygon(340% 0%, 370% 0%, 370% 100%, 340% 100%);
    }
  }

  .peel-intro & { transition: clip-path 3000ms ease-in; }

  &.peel-art-layer-fill {
    background-color: inherit;
    clip-path: polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%);
    transition: clip-path 1500ms cubic-bezier(0.2, 0.5, 0.8, 0.3) 800ms;

    .peel-far & {
      clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }

    .peel-intro & {
      transition: clip-path 1500ms cubic-bezier(0.2, 0.5, 0.8, 0.3) 2900ms;
    }
  }

  .peel-far & {
    &,
    &.peel-art-layer-fill { transition: none; }
  }

  .peel-art:hover & { transition: clip-path 300ms ease-out; }
}

.peel-intro ~ figcaption {
  opacity: 0;
  transform: translateY(100%);
}

.artizen-laurel {
  flex: 0 1 16rem;
  padding: var(--s-m0-r);
}

.split {
  --split-n: 2;
  flex: 1 1 auto;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: stretch;
  max-width: calc(var(--s-line-x)*var(--split-n));

  & > section {
    position: relative;
    flex: 1 1 calc((100%)/var(--split-n));
    min-width: calc(0.75*var(--s-line-x));
    max-width: calc(var(--s-line-x)+(var(--s-l0-x)*2));
    border: var(--s-s1-r) solid #0000;
    margin: 0 auto;
    background-clip: padding-box;
  }
}

.pay-split { background: var(--c-accent); }

.h-flex {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: flex-start;
}

.perks { gap: var(--s-l0-y); }

.perk {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
}

.artifact-view {
  position: relative;
  flex: 0 1 33vmax;
  max-width: 600px;

  .artifact-video {
    position: absolute;
    inset: 0;
    margin: auto;
    cursor: pointer;
    opacity: 0;
    pointer-events: none;
    transition: opacity 900ms ease-out;
    will-change: opacity, pointer-events;

    /* .artifact-view:hover &,
    .artifact-view:focus &,
    .artifact-view:active &, */
    .artifact-still:hover + &,
    /* .artifact-still:focus + &, */
    /* .artifact-still:active + &, */
    &:hover,
    &:focus,
    &:active,
    &:playing,
    &.playing {
      opacity: 1;
      transition: opacity 300ms ease-in;
      animation: pointer-events-auto-none 0ms 150ms reverse both;
    }
  }

  &:fullscreen {
    max-width: none;

    .artifact-video { padding: var(--s-l0-y) var(--s-l0-x); }
  }
}

.peer { flex-flow: row-reverse wrap; }

.peer-view { max-width: 2000px; }

.peer-view,
.peer-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--s-items-gap);
}

.peer-view { flex-flow: column nowrap; }

.peer-controls { flex-flow: row wrap; }

.peer-demo {
  display: block;
  aspect-ratio: 16/9;
  width: auto;
  height: 67dvh;
  max-height: 1080px;
  max-width: 100%;
  margin: var(--s-m0-y) var(--s-m0-x);
  background: var(--c-accent);
}

.peer-camera,
#peer-flip { display: none; }

.peer-camera {
  & ~ .icon::after { content: 'videocam_off'; }

  &:checked ~ .icon::after { content: 'video_call'; }
}

.peer-control { display: none; }

[for="peer-flip"] > .icon::after { content: 'preview_off'; }

#peer-flip:checked {
  & ~ .peer-control { display: block; }

  & ~ [for="peer-flip"] > .icon::after { content: 'preview'; }
}

.face-view {
  aspect-ratio: 16/9;
  flex: 1 0 auto;
  width: 300px;
  height: auto;
  max-width: 600px;
}

.face-video {
  width: 100%;
  height: 100%;
}

.info,
.copy {
  display: inline-block;
  position: relative;

  &::before {
    display: block;
    position: absolute;
    inset: auto 0 100% auto;
    width: var(--info-w);
    max-width: var(--s-line-x);
    padding: var(--s-s0-y) var(--s-s0-x);
    border-radius: var(--s-s1-r) var(--s-s1-r) 0 var(--s-s1-r);
    font-family: Inter, sans-serif;
    font-size: var(--s-font-m);
    pointer-events: none;
    opacity: 0;
    transform: translateY(0.5rem);
    transition: opacity 500ms ease-in 500ms,
      transform 500ms ease-in 500ms;
    will-change: opacity, transform;
  }

  &:hover,
  &:focus,
  &:active {
    &::before {
      opacity: 1;
      transform: none;
      transition: opacity 300ms ease-out 300ms,
        transform 300ms ease-out 300ms;
    }
  }
}

.info {
  cursor: help;

  &::after {
    content: 'ï¼Š';
    display: inline-block;
    position: absolute;
    inset: auto auto 100%;
    transform: translateY(80%);
    font-family: monospace, sans-serif;
    font-size: var(--s-font-s);
    line-height: 1;
    text-decoration: none;
    vertical-align: top;
    color: var(--c-active);
    font-weight: 900;
  }

  &::before {
    content: attr(title);
    border: 1px solid var(--c-active);
    color: var(--c-lo-1);
    background: var(--c-hi-1);
    font-weight: var(--font-w-1);
  }
}

.copy {
  cursor: copy;

  &::after {
    content: 'content_copy';
    transform: translateY(80%);
    font-weight: 900;
    /** @see [Google Material Symbols guide](https://developers.google.com/fonts/docs/material_symbols#use_in_web) */
    font-family: 'Material Symbols Rounded';
    /* font-weight: normal; */
    font-style: normal;
    /* font-size: 1.5rem; */
    /* display: inline-block; */
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
  }

  &::before {
    content: 'Click to copy';
    border: none;
    font-weight: 900;
    color: var(--c-good-1);
    background: var(--c-good-0);
  }

  &.copied {
    &,
    &:hover,
    &:focus,
    &:active {
      &::before {
        content: 'Copied to clipboard';
        color: var(--c-good-0);
        background: var(--c-good-1);
      }
    }
  }
}

.pay-info {
  line-height: 1.4;
  font-size: 1.8rem;
  font-weight: 900;
}

.contact {
 text-align: center;
 background: var(--c-lo-1);

 .button {
  color: var(--c-lo-1);
  background: var(--c-hi-1);
 }
}
